import React, { createContext, useContext, useState, ReactNode } from 'react';

interface {{pascalCase name}}ContextType {
  state: any;
  setState: React.Dispatch<React.SetStateAction<any>>;
}

const {{pascalCase name}}Context = createContext<{{pascalCase name}}ContextType | undefined>(undefined);

export const {{pascalCase name}}Provider = ({ children }: { children: ReactNode }) => {
  const [state, setState] = useState<any>(null);

  const value = { state, setState };

  return (
    <{{pascalCase name}}Context.Provider value={value}>
      {children}
    </{{pascalCase name}}Context.Provider>
  );
};

export const use{{pascalCase name}} = () => {
  const context = useContext({{pascalCase name}}Context);
  if (context === undefined) {
    throw new Error('use{{pascalCase name}} must be used within a {{pascalCase name}}Provider');
  }
  return context;
};
